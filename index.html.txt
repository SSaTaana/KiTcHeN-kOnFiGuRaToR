
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Конфигуратор мебельной фурнитуры</title>
  <script src="https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.development.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.development.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/babel-standalone@6.26.0/babel.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.68/pdfmake.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.68/vfs_fonts.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/i18next@23.11.5/dist/umd/i18next.min.js"></script>
  <style>
    body {
      background: linear-gradient(135deg, #1a1a1a, #000000);
      min-height: 100vh;
      font-family: 'Arial', sans-serif;
      color: #ffffff;
      position: relative;
      overflow-x: hidden;
    }
    .container-overlay, .welcome-container {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 1.5rem;
      padding: 1.5rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.7);
      backdrop-filter: blur(5px);
      max-width: 80rem;
      width: 100%;
      margin: 2rem auto;
    }
    .welcome-container {
      max-width: 40rem;
      text-align: center;
      animation: fadeIn 1s ease-in-out;
    }
    .configurator-container {
      animation: fadeIn 1s ease-in-out;
    }
    .edge-animation {
      position: fixed;
      top: 0;
      bottom: 0;
      width: 50px;
      background: linear-gradient(90deg, rgba(79, 70, 229, 0.2), transparent);
      animation: edgeGlow 3s ease-in-out infinite;
      pointer-events: none;
    }
    .edge-animation.left {
      left: 0;
    }
    .edge-animation.right {
      right: 0;
      background: linear-gradient(270deg, rgba(79, 70, 229, 0.2), transparent);
    }
    .navbar {
      position: fixed;
      top: 0;
      width: 100%;
      background: transparent;
      padding: 1rem 0;
      z-index: 10;
    }
    .tab-buttons {
      position: fixed;
      top: 4rem;
      right: 1rem;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      z-index: 10;
    }
    .tab-button {
      background: rgba(255, 255, 255, 0.1);
      border-radius: 0.5rem;
      padding: 0.5rem 1rem;
      color: #ffffff;
      cursor: pointer;
      transition: background 0.3s;
    }
    .tab-button.active {
      background: rgba(79, 70, 229, 0.3);
    }
    .tab-content {
      margin-top: 6rem;
    }
    .tooltip {
      position: relative;
    }
    .tooltip .tooltip-text {
      visibility: hidden;
      width: 200px;
      background-color: rgba(0, 0, 0, 0.6);
      color: #ccc;
      text-align: left;
      border-radius: 4px;
      padding: 5px;
      position: absolute;
      z-index: 1;
      left: -220px;
      top: 50%;
      transform: translateY(-50%);
      opacity: 0;
      transition: opacity 0.3s;
    }
    .tooltip:hover .tooltip-text {
      visibility: visible;
      opacity: 0.9;
    }
    @keyframes edgeGlow {
      0% { opacity: 0.3; transform: translateY(-10%); }
      50% { opacity: 0.8; transform: translateY(10%); }
      100% { opacity: 0.3; transform: translateY(-10%); }
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @media (max-width: 640px) {
      .container-overlay, .welcome-container {
        padding: 1rem;
        margin: 4rem 0.5rem;
      }
      h1 {
        font-size: 1.75rem;
      }
      h2 {
        font-size: 1.25rem;
      }
      .grid-cols-3 {
        grid-template-columns: 1fr;
      }
      .edge-animation {
        display: none;
      }
      .navbar {
        padding: 0.5rem 0;
      }
      .navbar a {
        font-size: 0.9rem;
        padding: 0.5rem;
      }
      .tab-buttons {
        top: 3rem;
        right: 0.5rem;
      }
    }
    .about-container {
      background: linear-gradient(135deg, rgba(79, 70, 229, 0.1), rgba(0, 0, 0, 0.8));
      border-radius: 1.5rem;
      padding: 2rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.7);
      text-align: center;
      max-width: 50rem;
      margin: 6rem auto;
      animation: fadeIn 1s ease-in-out;
    }
    .about-container h2 {
      font-size: 2rem;
      color: #d1c4e9;
      margin-bottom: 1rem;
    }
    .about-container p {
      font-size: 1.1rem;
      color: #b3e5fc;
      line-height: 1.6;
    }
  </style>
</head>
<body className="flex flex-col min-h-screen p-4">
  <div className="edge-animation left"></div>
  <div className="edge-animation right"></div>
  <div id="root"></div>
  <script type="text/babel">
    const { useState, useEffect } = React;

    // Инициализация i18next
    i18next.init({
      lng: 'ru',
      resources: {
        ru: {
          translation: {
            "welcome_title": "Добро пожаловать!",
            "welcome_text": "На нашем сайте вы можете подобрать идеальную мебельную фурнитуру с помощью удобного конфигуратора.",
            "go_to_configurator": "Перейти в конфигуратор",
            "configurator_title": "Конфигуратор мебельной фурнитуры",
            "type_label": "Тип фурнитуры",
            "type_placeholder": "Выберите тип",
            "type_tooltip": "Выберите тип фурнитуры, например, петли, ручки или направляющие.",
            "brand_label": "Бренд",
            "brand_placeholder": "Выберите бренд",
            "brand_tooltip": "Выберите известного производителя фурнитуры, например, Blum или Hettich.",
            "specific_option_label": "Дополнительные опции для",
            "specific_option_placeholder": "Выберите опцию",
            "specific_option_tooltip": "Уточните характеристики, например, наличие доводчика или цвет.",
            "price_range_from": "Цена от (руб.)",
            "price_range_to": "Цена до (руб.)",
            "find_options": "Найти варианты",
            "results_title": "Подходящие варианты:",
            "tab_results": "Результаты",
            "tab_saved": "Сохранённые",
            "save": "Сохранить",
            "saved_results_title": "Сохранённые варианты:",
            "export_selected_pdf": "Экспорт выбранных в PDF",
            "export_all_pdf": "Экспорт всего списка в PDF",
            "no_match": "Точного совпадения не найдено. Показываем ближайший вариант.",
            "price_disclaimer": "*Данная цена может варьироваться в зависимости от выбора продавца или поставщика",
            "about_title": "О нас",
            "about_text": "Мы представляем свой конфигуратор, который может помочь вам с первичными видами и типами определенной мебельной фурнитуры, поможем узнать среднюю цену, анализируя разные сайты поставщиков и продавцов. Наша цель — упростить ваш выбор, предоставляя актуальную информацию и удобный интерфейс для поиска идеального решения.",
            "nav_home": "Главная",
            "nav_configurator": "Конфигуратор",
            "nav_about": "О нас",
            "lang_ru": "Русский",
            "lang_en": "English"
          }
        },
        en: {
          translation: {
            "welcome_title": "Welcome!",
            "welcome_text": "On our website, you can find the perfect furniture fittings using our convenient configurator.",
            "go_to_configurator": "Go to Configurator",
            "configurator_title": "Furniture Fittings Configurator",
            "type_label": "Fitting Type",
            "type_placeholder": "Select type",
            "type_tooltip": "Select the type of fitting, e.g., hinges, handles, or guides.",
            "brand_label": "Brand",
            "brand_placeholder": "Select brand",
            "brand_tooltip": "Select a known manufacturer, e.g., Blum or Hettich.",
            "specific_option_label": "Additional options for",
            "specific_option_placeholder": "Select option",
            "specific_option_tooltip": "Specify features, e.g., soft-close mechanism or color.",
            "price_range_from": "Price from (RUB)",
            "price_range_to": "Price to (RUB)",
            "find_options": "Find Options",
            "results_title": "Matching Options:",
            "tab_results": "Results",
            "tab_saved": "Saved",
            "save": "Save",
            "saved_results_title": "Saved Options:",
            "export_selected_pdf": "Export Selected to PDF",
            "export_all_pdf": "Export Full List to PDF",
            "no_match": "No exact match found. Showing the closest option.",
            "price_disclaimer": "*This price may vary depending on the seller or supplier",
            "about_title": "About Us",
            "about_text": "We present our configurator, which can help you with initial types and categories of specific furniture fittings, assisting you in determining average prices by analyzing various supplier and seller websites. Our goal is to simplify your selection process by providing up-to-date information and an intuitive interface for finding the perfect solution.",
            "nav_home": "Home",
            "nav_configurator": "Configurator",
            "nav_about": "About Us",
            "lang_ru": "Русский",
            "lang_en": "English"
          }
        }
      }
    });

    const Navbar = ({ setCurrentPage }) => {
      const changeLanguage = (lng) => {
        i18next.changeLanguage(lng);
        document.querySelectorAll('[data-i18n]').forEach(elem => {
          elem.textContent = i18next.t(elem.getAttribute('data-i18n'));
        });
      };

      return (
        React.createElement('nav', { className: 'navbar flex justify-center gap-6 bg-gray-900 bg-opacity-0' },
          React.createElement('a', {
            href: '#',
            onClick: () => setCurrentPage('welcome'),
            className: 'text-white hover:text-indigo-400 transition duration-200',
            'data-i18n': 'nav_home'
          }, 'Главная'),
          React.createElement('a', {
            href: '#',
            onClick: () => setCurrentPage('configurator'),
            className: 'text-white hover:text-indigo-400 transition duration-200',
            'data-i18n': 'nav_configurator'
          }, 'Конфигуратор'),
          React.createElement('a', {
            href: '#',
            onClick: () => setCurrentPage('about'),
            className: 'text-white hover:text-indigo-400 transition duration-200',
            'data-i18n': 'nav_about'
          }, 'О нас'),
          React.createElement('div', { className: 'flex gap-2' },
            React.createElement('button', {
              onClick: () => changeLanguage('ru'),
              className: 'text-white hover:text-indigo-400 transition duration-200',
              'data-i18n': 'lang_ru'
            }, 'Русский'),
            React.createElement('button', {
              onClick: () => changeLanguage('en'),
              className: 'text-white hover:text-indigo-400 transition duration-200',
              'data-i18n': 'lang_en'
            }, 'English')
          )
        )
      );
    };

    const WelcomePage = ({ onNavigate }) => {
      return (
        React.createElement('div', { className: 'welcome-container' },
          React.createElement('h1', {
            className: 'text-4xl font-bold mb-6 bg-gradient-to-r from-indigo-400 to-purple-600 bg-clip-text text-transparent',
            'data-i18n': 'welcome_title'
          }, 'Добро пожаловать!'),
          React.createElement('p', { className: 'text-gray-300 mb-8', 'data-i18n': 'welcome_text' }, 'На нашем сайте вы можете подобрать идеальную мебельную фурнитуру с помощью удобного конфигуратора.'),
          React.createElement('button', {
            onClick: onNavigate,
            className: 'bg-gradient-to-r from-blue-600 to-blue-700 text-white px-6 py-3 rounded-lg shadow-lg hover:from-blue-700 hover:to-blue-800 transition duration-300 transform hover:scale-105',
            'data-i18n': 'go_to_configurator'
          }, 'Перейти в конфигуратор')
        )
      );
    };

    const ConfiguratorPage = () => {
      const [type, setType] = useState('');
      const [specificOption, setSpecificOption] = useState('');
      const [brand, setBrand] = useState('');
      const [priceRange, setPriceRange] = useState({ min: '', max: '' });
      const [results, setResults] = useState([]);
      const [savedResults, setSavedResults] = useState([]);
      const [activeTab, setActiveTab] = useState('results');
      const [error, setError] = useState('');

      const fittingsDatabase = [
        { id: 1, name: "Петля угловая стандартная", type: "Петля", subtype: "Угловая", mechanism: "Без доводчика", specificOption: "Стандартная", brand: "Blum", price: 500, description: "Надёжная угловая петля для шкафов.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 2, name: "Петля накладная с доводчиком", type: "Петля", subtype: "Накладная", mechanism: "С доводчиком", specificOption: "С доводчиком", brand: "Hettich", price: 800, description: "Накладная петля с плавным закрыванием.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 3, name: "Петля врезная push-to-open", type: "Петля", subtype: "Врезная", mechanism: "Push-to-open", specificOption: "Push-to-open", brand: "Hafele", price: 1200, description: "Врезная петля с push-механизмом.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 4, name: "Направляющая шариковая стандартная", type: "Направляющая", subtype: "Шариковая", mechanism: "Без доводчика", specificOption: "Стандартная", brand: "Blum", price: 1500, description: "Шариковая направляющая для ящиков.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 5, name: "Направляющая роликовая с доводчиком", type: "Направляющая", subtype: "Роликовая", mechanism: "С доводчиком", specificOption: "С доводчиком", brand: "Hettich", price: 1800, description: "Роликовая направляющая с плавным ходом.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 6, name: "Направляющая скрытого монтажа push-to-open", type: "Направляющая", subtype: "Скрытого монтажа", mechanism: "Push-to-open", specificOption: "Push-to-open", brand: "Hafele", price: 2000, description: "Скрытая направляющая для ящиков.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 7, name: "Ручка круглая классическая", type: "Ручка", subtype: "Круглая", mechanism: "Без доводчика", specificOption: "Классическая", brand: "Blum", price: 300, description: "Классическая круглая ручка.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 8, name: "Ручка длинная современная", type: "Ручка", subtype: "Длинная", mechanism: "Без доводчика", specificOption: "Рейлинг", brand: "Hettich", price: 400, description: "Современная длинная ручка-рейлинг.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 9, name: "Ручка квадратная push-to-open", type: "Ручка", subtype: "Квадратная", mechanism: "Push-to-open", specificOption: "Скоба", brand: "Hafele", price: 600, description: "Квадратная ручка-скоба с push-механизмом.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" },
        { id: 10, name: "Крепление угловое базовое", type: "Крепление", subtype: "Угловое", mechanism: "Без доводчика", specificOption: "Базовое", brand: "Hafele", price: 400, description: "Базовое угловое крепление.", image: "https://via.placeholder.com/300x200/808080?text=Furniture+Part" }
      ];

      const specificOptions = {
        "Петля": ["Стандартная", "С доводчиком", "Push-to-open", "Усиленная", "Декоративная"],
        "Направляющая": ["Стандартная", "С доводчиком", "Push-to-open", "Усиленная", "Декоративная"],
        "Ручка": ["Классическая", "Рейлинг", "Скоба", "Винтажная", "Современная"],
        "Крепление": ["Базовое", "Регулируемое", "Усиленное", "Компактное", "Декоративное"]
      };

      const findBestOptions = () => {
        const filteredFittings = fittingsDatabase.filter(fitting => {
          const typeMatch = type ? fitting.type === type : true;
          const specificOptionMatch = specificOption ? fitting.specificOption === specificOption : true;
          const brandMatch = brand ? fitting.brand === brand : true;
          const priceMinMatch = priceRange.min ? fitting.price >= Number(priceRange.min) : true;
          const priceMaxMatch = priceRange.max ? fitting.price <= Number(priceRange.max) : true;

          return typeMatch && specificOptionMatch && brandMatch && priceMinMatch && priceMaxMatch;
        });

        if (filteredFittings.length === 0) {
          setError(i18next.t('no_match'));
          const fallback = type ? fittingsDatabase.find(f => f.type === type) : fittingsDatabase[0];
          setResults([fallback]);
        } else {
          setError('');
          setResults(filteredFittings);
        }
      };

      const saveToPDF = (allResults = false) => {
        const content = allResults ? [...results, ...savedResults] : results;
        const docDefinition = {
          content: [
            { text: allResults ? i18next.t('export_all_pdf') : i18next.t('export_selected_pdf'), style: 'header' },
            ...content.map(fitting => ({
              text: [
                `${i18next.t('name')}: ${fitting.name}\n`,
                `${i18next.t('type')}: ${fitting.type} (${fitting.subtype})\n`,
                `${i18next.t('option')}: ${fitting.specificOption}\n`,
                `${i18next.t('brand')}: ${fitting.brand}\n`,
                `${i18next.t('price')}: ${fitting.price} руб.\n`,
                `${i18next.t('description')}: ${fitting.description}\n\n`
              ]
            }))
          ],
          styles: {
            header: { fontSize: 18, bold: true, margin: [0, 0, 0, 10], color: '#000000' }
          }
        };
        pdfMake.createPdf(docDefinition).download(`fittings_results_${allResults ? 'all' : 'selected'}.pdf`);
      };

      const saveResult = (fitting) => {
        if (!savedResults.some(item => item.id === fitting.id)) {
          setSavedResults([...savedResults, fitting]);
        }
      };

      const handlePriceRangeChange = (e) => {
        const { name, value } = e.target;
        const newValue = value === '' ? '' : Math.max(0, Number(value));
        setPriceRange(prev => ({ ...prev, [name]: newValue }));
      };

      return (
        React.createElement('div', { className: 'container-overlay configurator-container' },
          React.createElement('h1', {
            className: 'text-4xl font-bold text-center mb-8 bg-gradient-to-r from-indigo-400 to-purple-600 bg-clip-text text-transparent',
            'data-i18n': 'configurator_title'
          }, 'Конфигуратор мебельной фурнитуры'),
          React.createElement('div', { className: 'flex flex-col md:flex-row justify-center items-center gap-6 mb-8' },
            React.createElement('div', { className: 'w-full md:w-1/3 tooltip' },
              React.createElement('label', { className: 'block text-sm font-medium text-gray-200', 'data-i18n': 'type_label' }, 'Тип фурнитуры'),
              React.createElement('span', { className: 'tooltip-text', 'data-i18n': 'type_tooltip' }, 'Выберите тип фурнитуры, например, петли, ручки или направляющие.'),
              React.createElement('select', {
                value: type,
                onChange: (e) => { setType(e.target.value); setSpecificOption(''); },
                className: 'mt-2 block w-full rounded-md border-gray-700 bg-gray-900 text-white shadow-md focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-3 transition duration-200'
              },
                React.createElement('option', { value: '', 'data-i18n': 'type_placeholder' }, 'Выберите тип'),
                [...new Set(fittingsDatabase.map(f => f.type))].map(t =>
                  React.createElement('option', { key: t, value: t }, t)
                )
              )
            ),
            React.createElement('div', { className: 'w-full md:w-1/3 tooltip' },
              React.createElement('label', { className: 'block text-sm font-medium text-gray-200', 'data-i18n': 'brand_label' }, 'Бренд'),
              React.createElement('span', { className: 'tooltip-text', 'data-i18n': 'brand_tooltip' }, 'Выберите известного производителя фурнитуры, например, Blum или Hettich.'),
              React.createElement('select', {
                value: brand,
                onChange: (e) => setBrand(e.target.value),
                className: 'mt-2 block w-full rounded-md border-gray-700 bg-gray-900 text-white shadow-md focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-3 transition duration-200'
              },
                React.createElement('option', { value: '', 'data-i18n': 'brand_placeholder' }, 'Выберите бренд'),
                [...new Set(fittingsDatabase.map(f => f.brand))].map(b =>
                  React.createElement('option', { key: b, value: b }, b)
                )
              )
            )
          ),
          React.createElement('div', { className: 'flex flex-col md:flex-row justify-center items-center gap-6 mb-8' },
            React.createElement('div', { className: 'w-full md:w-1/3' },
              React.createElement('label', { className: 'block text-sm font-medium text-gray-200', 'data-i18n': 'price_range_from' }, 'Цена от (руб.)'),
              React.createElement('input', {
                type: 'number',
                name: 'min',
                value: priceRange.min,
                onChange: handlePriceRangeChange,
                className: 'mt-2 block w-full rounded-md border-gray-700 bg-gray-900 text-white shadow-md focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-3 transition duration-200',
                min: '0'
              })
            ),
            React.createElement('div', { className: 'w-full md:w-1/3' },
              React.createElement('label', { className: 'block text-sm font-medium text-gray-200', 'data-i18n': 'price_range_to' }, 'Цена до (руб.)'),
              React.createElement('input', {
                type: 'number',
                name: 'max',
                value: priceRange.max,
                onChange: handlePriceRangeChange,
                className: 'mt-2 block w-full rounded-md border-gray-700 bg-gray-900 text-white shadow-md focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-3 transition duration-200',
                min: '0'
              })
            )
          ),
          type && React.createElement('div', { className: 'mb-8 text-center tooltip' },
            React.createElement('label', { className: 'block text-sm font-medium text-gray-200', 'data-i18n': 'specific_option_label' }, `Дополнительные опции для ${type}`),
            React.createElement('span', { className: 'tooltip-text', 'data-i18n': 'specific_option_tooltip' }, 'Уточните характеристики, например, наличие доводчика или цвет.'),
            React.createElement('select', {
              value: specificOption,
              onChange: (e) => setSpecificOption(e.target.value),
              className: 'mt-2 block w-full md:w-1/3 mx-auto rounded-md border-gray-700 bg-gray-900 text-white shadow-md focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm p-3 transition duration-200'
            },
              React.createElement('option', { value: '', 'data-i18n': 'specific_option_placeholder' }, 'Выберите опцию'),
              specificOptions[type].map(option =>
                React.createElement('option', { key: option, value: option }, option)
              )
            )
          ),
          error && React.createElement('p', { className: 'text-red-400 text-center mb-4' }, error),
          React.createElement('div', { className: 'flex justify-center mb-8' },
            React.createElement('button', {
              onClick: findBestOptions,
              className: 'bg-gradient-to-r from-blue-600 to-blue-700 text-white px-6 py-3 rounded-lg shadow-lg hover:from-blue-700 hover:to-blue-800 transition duration-300 transform hover:scale-105 w-full md:w-auto',
              'data-i18n': 'find_options'
            }, 'Найти варианты')
          ),
          React.createElement('div', { className: 'tab-content' },
            activeTab === 'results' && results.length > 0 && React.createElement('div', null,
              React.createElement('h2', {
                className: 'text-3xl font-semibold text-white mb-6 text-center bg-gradient-to-r from-indigo-400 to-purple-600 bg-clip-text',
                'data-i18n': 'results_title'
              }, 'Подходящие варианты:'),
              React.createElement('div', { className: 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6' },
                results.map(fitting =>
                  React.createElement('div', {
                    key: fitting.id,
                    className: 'bg-gray-900 rounded-xl shadow-xl p-4 hover:bg-gray-800 hover:shadow-2xl transition-all duration-300 transform hover:scale-105'
                  },
                    React.createElement('img', {
                      src: fitting.image,
                      alt: fitting.name,
                      className: 'w-full h-40 object-cover rounded-lg mb-4'
                    }),
                    React.createElement('h3', { className: 'text-xl font-semibold text-white' }, fitting.name),
                    React.createElement('p', { className: 'text-gray-300', 'data-i18n': 'type' }, `${i18next.t('type')}: ${fitting.type} (${fitting.subtype})`),
                    React.createElement('p', { className: 'text-gray-300', 'data-i18n': 'option' }, `${i18next.t('option')}: ${fitting.specificOption}`),
                    React.createElement('p', { className: 'text-gray-300', 'data-i18n': 'brand' }, `${i18next.t('brand')}: ${fitting.brand}`),
                    React.createElement('p', { className: 'text-purple-500 font-bold mt-2', 'data-i18n': 'price' }, `${i18next.t('price')}: ${fitting.price} руб.`),
                    React.createElement('p', { className: 'text-gray-400 mt-2', 'data-i18n': 'description' }, `${i18next.t('description')}: ${fitting.description}`),
                    React.createElement('div', { className: 'flex gap-2 mt-4' },
                      React.createElement('button', {
                        onClick: () => saveResult(fitting),
                        className: 'w-full bg-gradient-to-r from-blue-600 to-blue-700 text-white px-4 py-2 rounded-md hover:from-blue-700 hover:to-blue-800 transition duration-200',
                        'data-i18n': 'save'
                      }, 'Сохранить')
                    ),
                    React.createElement('p', { className: 'text-xs text-gray-500 mt-2', 'data-i18n': 'price_disclaimer' }, '*Данная цена может варьироваться в зависимости от выбора продавца или поставщика')
                  )
                )
              ),
              React.createElement('div', { className: 'flex flex-col md:flex-row justify-center mt-8 gap-4' },
                React.createElement('button', {
                  onClick: () => saveToPDF(false),
                  className: 'bg-gradient-to-r from-blue-600 to-blue-700 text-white px-6 py-3 rounded-lg shadow-lg hover:from-blue-700 hover:to-blue-800 transition duration-300 transform hover:scale-105 w-full md:w-auto',
                  'data-i18n': 'export_selected_pdf'
                }, 'Экспорт выбранных в PDF'),
                React.createElement('button', {
                  onClick: () => saveToPDF(true),
                  className: 'bg-gradient-to-r from-blue-600 to-blue-700 text-white px-6 py-3 rounded-lg shadow-lg hover:from-blue-700 hover:to-blue-800 transition duration-300 transform hover:scale-105 w-full md:w-auto mt-4 md:mt-0',
                  'data-i18n': 'export_all_pdf'
                }, 'Экспорт всего списка в PDF')
              )
            ),
            activeTab === 'saved' && savedResults.length > 0 && React.createElement('div', null,
              React.createElement('h2', {
                className: 'text-3xl font-semibold text-white mb-6 text-center bg-gradient-to-r from-indigo-400 to-purple-600 bg-clip-text',
                'data-i18n': 'saved_results_title'
              }, 'Сохранённые варианты:'),
              React.createElement('div', { className: 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6' },
                savedResults.map(fitting =>
                  React.createElement('div', {
                    key: fitting.id,
                    className: 'bg-gray-700 rounded-xl shadow-md p-4 hover:bg-gray-600 transition duration-300'
                  },
                    React.createElement('h3', { className: 'text-xl font-semibold text-white' }, fitting.name),
                    React.createElement('p', { className: 'text-gray-300', 'data-i18n': 'price' }, `${i18next.t('price')}: ${fitting.price} руб.`),
                    React.createElement('p', { className: 'text-gray-300', 'data-i18n': 'brand' }, `${i18next.t('brand')}: ${fitting.brand}`)
                  )
                )
              )
            )
          ),
          React.createElement('div', { className: 'tab-buttons' },
            React.createElement('button', {
              className: `tab-button ${activeTab === 'results' ? 'active' : ''}`,
              onClick: () => setActiveTab('results'),
              'data-i18n': 'tab_results'
            }, 'Результаты'),
            React.createElement('button', {
              className: `tab-button ${activeTab === 'saved' ? 'active' : ''}`,
              onClick: () => setActiveTab('saved'),
              'data-i18n': 'tab_saved'
            }, 'Сохранённые')
          )
        )
      );
    };

    const AboutPage = () => {
      return (
        React.createElement('div', { className: 'about-container' },
          React.createElement('h2', {
            className: 'text-2xl font-bold mb-4 bg-gradient-to-r from-indigo-400 to-purple-600 bg-clip-text text-transparent',
            'data-i18n': 'about_title'
          }, 'О нас'),
          React.createElement('p', { className: 'text-gray-300', 'data-i18n': 'about_text' }, 'Мы представляем свой конфигуратор, который может помочь вам с первичными видами и типами определенной мебельной фурнитуры, поможем узнать среднюю цену, анализируя разные сайты поставщиков и продавцов. Наша цель — упростить ваш выбор, предоставляя актуальную информацию и удобный интерфейс для поиска идеального решения.')
        )
      );
    };

    const App = () => {
      const [currentPage, setCurrentPage] = useState('welcome');

      useEffect(() => {
        document.querySelectorAll('[data-i18n]').forEach(elem => {
          elem.textContent = i18next.t(elem.getAttribute('data-i18n'));
        });
      }, [currentPage]);

      return (
        React.createElement(React.Fragment, null,
          React.createElement(Navbar, { setCurrentPage: setCurrentPage }),
          currentPage === 'welcome' && React.createElement(WelcomePage, { onNavigate: () => setCurrentPage('configurator') }),
          currentPage === 'configurator' && React.createElement(ConfiguratorPage, null),
          currentPage === 'about' && React.createElement(AboutPage, null)
        )
      );
    };

    ReactDOM.render(React.createElement(App, null), document.getElementById('root'));
  </script>
</body>
</html>